// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  password      String
  name          String
  profilePicUrl String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  events        Event[]  @relation("EventOwner")
  rsvps         RSVP[]
}

model Event {
  id          String   @id @default(uuid())
  title       String
  description String
  startTime   DateTime
  endTime     DateTime
  location    String
  ownerId     String
  owner       User     @relation("EventOwner", fields: [ownerId], references: [id])
  rsvps       RSVP[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([title])
  @@index([location])
  @@index([startTime])
}

model RSVP {
  id        String   @id @default(uuid())
  userId    String
  eventId   String
  status    String // "going", "maybe", "not_going"
  user      User     @relation(fields: [userId], references: [id])
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, eventId])
}
